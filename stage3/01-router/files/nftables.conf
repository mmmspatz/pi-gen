#!/usr/sbin/nft -f

flush ruleset

define wan = {eth0.100, he-ipv6}
define guest = eth0.10

table inet router_filter {
	chain prerouting {
		type filter hook prerouting priority -100; policy accept;
		iifname $wan jump prerouting_from_wan
	}

	chain prerouting_from_wan {
		# Drop invalid connections
		ct state invalid counter drop

		# Rate limit ICMP ping
		ip protocol icmp icmp type echo-request limit rate over 100/second counter drop
		ip6 nexthdr icmpv6 icmpv6 type echo-request limit rate over 100/second counter drop
	}

	chain input {
		type filter hook input priority 0; policy accept;
		iifname $wan jump input_from_wan
		iifname $guest jump input_from_guest
	}

	chain input_from_guest {
		# Allow established/related connections
		ct state { established, related } accept

		# Allow ICMP
		ip protocol icmp accept
		ip6 nexthdr icmpv6 accept

		# Expose DNS server
		tcp dport 53 accept
		udp dport 53 accept

		# Expose DHCPv4 server
		udp dport bootps udp sport bootpc counter accept

		# Reject everything else
		counter reject with icmpx type admin-prohibited
	}

	chain input_from_wan {
		# Drop packets that wouldn't be routed to the interface they arrived on
		fib daddr . iif type != { local, broadcast, multicast } counter drop

		# Allow established/related connections
		ct state { established, related } accept

		# Allow ICMP
		ip protocol icmp accept
		ip6 nexthdr icmpv6 accept

		# Open local ports
		tcp dport 2222 counter accept # sshd
	
		# Reject everything else
		counter reject with icmpx type port-unreachable
	}

	chain forward {
		type filter hook forward priority 0; policy accept;
		iifname $wan jump forward_from_wan

		# Isolate guest vlan from other LAN segments
		iifname $guest oifname != $wan counter drop
		oifname $guest iifname != $wan counter drop
	}

	chain forward_from_wan {
		# Allow established/related connections
		ct state { established, related } accept

		# Allow ICMP
		ip protocol icmp counter accept
		ip6 nexthdr icmpv6 counter accept

		# Allow incoming connections to select ipv6 hosts
		# TODO

		# Reject everything else
		counter reject with icmpx type admin-prohibited
	}

}

table ip router_nat {
	chain prerouting {
		type nat hook prerouting priority -100; policy accept;

		# Port Forwarding
		# tcp dport { ssh, http } dnat to destination_ip
	}

	chain postrouting {
		type nat hook postrouting priority 100; policy accept;
		oifname $wan ip saddr 192.168.0.0/16 counter masquerade
	}

}

